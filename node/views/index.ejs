<!DOCTYPE html>
<link rel="stylesheet" type="text/css" href="index.css">
<script>
  var canvas = 1;
</script>

<html>
  <head>
    <title>Coucou</title>
  </head>
  <body>
    <div id=menu>
      <div id=lat>Cette page est une
      page toute simple </div>
      <div id=camerasize>
        <FORM>
          <SELECT id="reschoice" size="1">
            <OPTION>800x600
            <OPTION>640x480
            <OPTION>512x384
            <OPTION>400x300
            <OPTION>384x288
            <OPTION>320x240
            <OPTION>256x192
            <OPTION>160x120
            <OPTION>40x30
          </SELECT>
        </FORM>


      </div>
    </div>
  <div id=cameradiv>

    <script>
      if(canvas)
      {
        document.write('<canvas id="camvas" width="800" height="600" style="border:1px solid #000000;"></canvas>');
      }
      else
      {
        document.write('<img id=cam src="webcam.jpg" height="600"/>');
      }
    </script>
  </div>
  </center>
  </body>
</html>





<script>
//-------------------------gamepad
// https://developer.mozilla.org/fr/docs/Web/Guide/API/Gamepad
var gamepadlistener = null;
var onlinepads = [];
var padfreq = 20;
var padstate = [];

function reportOnGamepad() {

  for (var gpindex in onlinepads) {
      var gp = navigator.getGamepads()[gpindex];

      for(var i=0;i<gp.buttons.length;i++)
      {
        if(padstate[gp.index]["button"+i] == 0)
        {
            if(gp.buttons[i].pressed)
              console.log("Button " + i + " pressed");
        }
        padstate[gp.index]["button"+i] = gp.buttons[i].pressed;
      }

      /*for(var i=0;i<gp.axes.length; i+=2) {
          console.log("Stick "+(Math.ceil(i/2)+1)+": "+gp.axes[i]+","+gp.axes[i+1]);
      }*/
  }
}

function addpad(pad)
{
  console.log("Contrôleur n°%d connecté : %s. %d boutons, %d axes.",
  pad.index, pad.id,
  pad.buttons.length, pad.axes.length);

  map = {};

  for(var i=0;i<pad.buttons.length;i++) {
    map["button" + i] = pad.buttons[i].pressed;
  }

  for(var i=0;i<pad.axes.length; i+=2) {
    map["axe" + i] = pad.axes[i];
    map["axe" + (i+1)] = pad.axes[i+1];
  }

  padstate[pad.index] = map;

  console.log(JSON.stringify(padstate));

  onlinepads.push(i);
  if(gamepadlistener == null)
    gamepadlistener = window.setInterval(reportOnGamepad,padfreq);
}

//register gamepads
for (var i = 0; i < navigator.getGamepads().length; i++) {
  var pad = navigator.getGamepads()[i];
  if(typeof(pad) != 'undefined')
  {
    addpad(pad);
  }
}

window.addEventListener("gamepadconnected", function(e) {
  addpad(e.gamepad);
});

window.addEventListener("gamepaddisconnected", function(e) {
  console.log("Contrôleur n°%d déconnecté : %s",
  e.gamepad.index, e.gamepad.id);

  onlinepads.splice(onlinepads.indexOf(e.gamepad.index));

  if(onlinepads.length == 0)
  {
    window.clearInterval(gamepadlistener);
    gamepadlistener = null;
  }
});





//-------------------------changement de résolution

var reschoice = document.getElementById('reschoice');
reschoice.onchange = function(){

  rt = reschoice.options[reschoice.selectedIndex].text.split('x');

  req = new XMLHttpRequest();
  req.open("POST", "http://" + window.location.hostname + ":" + window.location.port + "/setres", false);
  req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  var encoded = 'w='+ rt[0] + '&h=' + rt[1];
  req.send(encoded);

  if (req.status != 200)
  {
    alert("There was a communications error: " + req.responseText);
    return;
  }
  else
  {
    //alert(req.responseXML);
    //alert(req.responseText);
  }


}

//-------------------------affichage de l'image
function sleep (time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}


function start_webcam_diffusion()
{
  if(canvas)
  {
    /* using canvas */
    var camvas = document.getElementById("camvas");
    var ctx = camvas.getContext('2d');
    //var img = [new Image , new Image];
    var img = new Image;

    //refresh image
    function getimage(){
        updateFPS();
        ctx.drawImage(img,0,0, camvas.width, camvas.height);
        img.src = "webcam.jpg?" + new Date().getTime();
      };
    img.onload = getimage;

    img.src = "webcam.jpg?" + new Date().getTime();
  }
  else {
    /* using image */
    var cam = document.getElementById("cam");

    cam.onload = function () {
      var now = new Date().getTime();
      lat.innerHTML = 'Latency : ' + (now - loadtime);

      //sleep(5).then(() => {
        cam.src = "webcam.jpg?" + new Date().getTime();

        loadtime = (new Date().getTime());
      //})


    }
  }
}



var loadtime = new Date().getTime();
var lat = document.getElementById("lat");
var printfps = 0;
var fps = 0;
var fpstime = new Date().getTime();

function updateFPS()
{
  var now = new Date().getTime();
  fps ++;
  if((now - fpstime) >= 1000)
  {
    printfps = fps;
    fps = 0;
    fpstime = now;
  }

  lat.innerHTML = 'Latency : ' + (now - loadtime) + '</br>' +
    'FPS : ' + printfps;

  loadtime = now;
}



//start diffusion
start_webcam_diffusion();
</script>
